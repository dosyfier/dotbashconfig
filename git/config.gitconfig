# vim: set filetype=gitconfig:
[user]
	name = %DOTBASHCFG_USER%
	email = %DOTBASHCFG_MAIL%
[credential]
	helper = cache
[core]
	autocrlf = input
	editor = vim
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[merge]
	tool = vimdiff
[mergetool]
	keepBackup = false
[push]
	default = simple
[pull]
	rebase = true
[alias]
	# add
	a = !sh -c 'git add "${@:-.}"' -
	aa = !sh -c 'git add -A "${@:-.}"' -
	au = !sh -c 'git add -u "${@:-.}"' -
	# branch
	br = branch
	bra = branch -a
	brd = branch -d
	brD = branch -D
	merged = branch --merged
	# checkout
	co = checkout
	cob = checkout -b
	# cherry-pick
	cp = cherry-pick
	# commit
	c = commit
	cm = commit -m
	aac = !git add -A . && git commit
	aacm = !git add -A . && git commit -m
	ac = "!ac() { git add \"$@\" && git commit; }; ac"
	acm = "!acm() { git add \"${@:1:$#-1}\" && git commit -m \"${@: -1}\"; }; acm"
	amend = commit --amend
	amendm = commit --amend -m
	amendf = commit --amend --no-edit
	# config
	aliases = "!git config --get-regexp '^alias\\.' | sed -r 's/^alias\\.([^[:space:]]+) /\\1\\t= /'"
	# diff
	d = diff
	dc = diff --cached
	dt = difftool
	dtc = difftool --cached
	oldest-ancestor = !zsh -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-develop}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -
	branchdiff = '!sh -c "git diff `git oldest-ancestor`.."'
        # fetch
	fp = fetch -p origin
	# grep
	gr = grep -Ii
	# log
	lg = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	lgn = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	log-branch = '!sh -c "git log `git oldest-ancestor`.."'
	# ls-files
	f = "!git ls-files | grep -i"
	# merge
	m = merge
	mt = mergetool
	# pull
	pl = pull
	pld = pull origin develop
	plm = pull origin master
	plh = pull origin HEAD
	# push
	ph = push
	phf = push --force
	phc = !git push origin `git branch --show-current`
	phcf = !git push --force origin `git branch --show-current`
	phd = push origin develop
	phm = push origin master
	phh = push origin HEAD
	# rebase
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbd = rebase origin/develop
	rbf = !sh -c 'git rebase -i $(git merge-base $(git branch --show-current) origin/develop)'
	rbi = !sh -c 'git rebase -i "${1:-origin/$(git branch --show-current)}"' -
	rbm = rebase origin/master
	rbs = rebase --skip
	# reset
	rewind = reset --soft HEAD^${1}
	unstage = reset HEAD
        # rev-parse
	show-upstream = rev-parse --abbrev-ref --symbolic-full-name @{u}
	# show
	sh = show
	# stash
	stash-n-pull = "!sh -c 'if git diff --exit-code > /dev/null; then git pull; else git stash && git pull && git stash pop; fi'"
	# status
	s = status -u -s
	st = status
